-> start

== start

```
, This test does nutty stuff with the Hank/Haxe embedding paradigm.
if (start <= 2) {
    ,,,
    Loop #: {start}
    * A series of choices
    * In Hank script embedded in Haxe script embedded in Hank script!
    * {start == 1} What could be more fun?
    * {start == 2} Gosh this sucks
    - -> sanity
    ,,,
} else {
    , -> one_more_thing
}
```

This line is a red herring. It should never appear!

== sanity

A brief moment of sanity.
-> start

== one_more_thing

One more thing. We need all of the lines

+ after a choice[] to be executed
    BEFORE the gather is processed.
    ```
    if (one_more_thing >= 2) {
        , -> the_end
    }
    ```
- What up
-> one_more_thing

== the_end
Now it's really over!